name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  MONGODB_URI: mongodb://localhost:27017
  MONGODB_DB: promptDirectory_test

jobs:
  test:
    name: 🧪 Test & Quality Checks
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🐍 Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        cd API
        pip install -r requirements.txt
        pip install pytest pytest-django pytest-cov flake8 black isort

    - name: 🔧 Setup Database
      env:
        MONGODB_URI: ${{ env.MONGODB_URI }}
        MONGODB_DB: ${{ env.MONGODB_DB }}
      run: |
        cd API/promptDirectory
        python manage.py makemigrations
        python manage.py migrate

    - name: 🧪 Run Tests
      env:
        MONGODB_URI: ${{ env.MONGODB_URI }}
        MONGODB_DB: ${{ env.MONGODB_DB }}
      run: |
        cd API/promptDirectory
        pytest -v

    - name: 🎨 Code Formatting Check
      run: |
        cd API/promptDirectory
        black --check .
      continue-on-error: true

    - name: 🔍 Lint Code
      run: |
        cd API/promptDirectory
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true

  keploy:
    name: 🚀 Keploy Integration Tests
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🐍 Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        cd API
        pip install -r requirements.txt

    - name: 🛠️ Install Keploy CLI
      run: |
        curl --silent -L https://keploy.io/ent/install.sh | bash

    - name: 🔧 Setup Database
      env:
        MONGODB_URI: ${{ env.MONGODB_URI }}
        MONGODB_DB: ${{ env.MONGODB_DB }}
      run: |
        cd API/promptDirectory
        python manage.py makemigrations
        python manage.py migrate

    - name: 🚀 Run Keploy Test Suite
      env:
        KEPLOY_API_KEY: ${{ secrets.KEPLOY_API_KEY }}
      run: |
        keploy test-suite --app=6b790b75-a578-4db7-b83b-0ddd61d9fff3 --base-path http://localhost:8000/api --cloud
